(window.webpackJsonp=window.webpackJsonp||[]).push([[210],{522:function(t,r,o){"use strict";o.r(r);var a=o(25),i=Object(a.a)({},(function(){var t=this,r=t._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#算法"}},[t._v("#")]),t._v(" 算法")]),t._v(" "),r("h2",{attrs:{id:"左程云-初级"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#左程云-初级"}},[t._v("#")]),t._v(" 左程云：初级")]),t._v(" "),r("h3",{attrs:{id:"复杂度"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#复杂度"}},[t._v("#")]),t._v(" 复杂度")]),t._v(" "),r("ol",[r("li",[r("a",{attrs:{href:"./junior/complexity"}},[t._v("认识时间复杂度")])])]),t._v(" "),r("h3",{attrs:{id:"排序"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#排序"}},[t._v("#")]),t._v(" 排序")]),t._v(" "),r("ol",[r("li",[r("a",{attrs:{href:"./junior/bubble"}},[t._v("冒泡")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./junior/select"}},[t._v("选择")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./junior/insert"}},[t._v("插入")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./junior/merge"}},[t._v("归并")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./junior/quick"}},[t._v("快排")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./junior/heap"}},[t._v("堆排")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./junior/maxGap"}},[t._v("maxGap")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./junior/medianQuick"}},[t._v("一个stream的中位数")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./junior/netherlandsFlag"}},[t._v("netherlandsFlag")])])]),t._v(" "),r("h3",{attrs:{id:"队列和栈"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#队列和栈"}},[t._v("#")]),t._v(" 队列和栈")]),t._v(" "),r("ol",[r("li",[r("a",{attrs:{href:"./junior/stackAndQueue"}},[t._v("队列和栈相互实现")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./junior/minStack"}},[t._v("有最小元素方法的栈")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./junior/dequeByArray"}},[t._v("数组结构实现队列和栈")])])]),t._v(" "),r("h3",{attrs:{id:"链表"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#链表"}},[t._v("#")]),t._v(" 链表")]),t._v(" "),r("ol",[r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/junior/smallEqualBig.html"}},[t._v("链表按某值划三块")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/junior/firstIntersect.html"}},[t._v("两个链表相交点")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/junior/copyList.html"}},[t._v("复制含有随机指针节点的链表")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/junior/isPalindrome.html"}},[t._v("链表是否为回文结构")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/junior/samePart.html"}},[t._v("两顺序链表的相同部分")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/junior/reverse.html"}},[t._v("反转链表")])],1)]),t._v(" "),r("h3",{attrs:{id:"树"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#树"}},[t._v("#")]),t._v(" 树")]),t._v(" "),r("ol",[r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/junior/trieTree.html"}},[t._v("前缀树")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/junior/completeTreeCount.html"}},[t._v("完全二叉树节点数量")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/junior/binaryTreeSerialize.html"}},[t._v("二叉树的序列化和反序列化")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/junior/successor.html"}},[t._v("二叉树的后继和前驱")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/junior/binaryTreeTraversal.html"}},[t._v("二叉树的遍历")])],1)]),t._v(" "),r("h3",{attrs:{id:"哈希"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#哈希"}},[t._v("#")]),t._v(" 哈希")]),t._v(" "),r("ol",[r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/junior/islands.html"}},[t._v("岛屿个数")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/junior/unionFind.html"}},[t._v("并查集")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/junior/randomPool.html"}},[t._v("randomPool")])],1)]),t._v(" "),r("h3",{attrs:{id:"贪心"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#贪心"}},[t._v("#")]),t._v(" 贪心")]),t._v(" "),r("ol",[r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/junior/maxCapital.html"}},[t._v("IPO")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/junior/bestArrange.html"}},[t._v("最佳会议室安排")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/junior/lessMoney.html"}},[t._v("金条分割的最小代价")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/junior/lowLexi.html"}},[t._v("最低的字典序")])],1)]),t._v(" "),r("h3",{attrs:{id:"回溯"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#回溯"}},[t._v("#")]),t._v(" 回溯")]),t._v(" "),r("ol",[r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/junior/eightQueen.html"}},[t._v("八皇后问题")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/junior/reverseStack.html"}},[t._v("逆序一个栈")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/junior/allSubSeq.html"}},[t._v("所有的子序列")])],1)]),t._v(" "),r("h3",{attrs:{id:"动态规划"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#动态规划"}},[t._v("#")]),t._v(" 动态规划")]),t._v(" "),r("ol",[r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/junior/knapsack.html"}},[t._v("背包问题")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/junior/maxCoins.html"}},[t._v("扎气球得最大金币")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/junior/win.html"}},[t._v("排成一条线的纸牌博弈问题")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/junior/robotWay.html"}},[t._v("robotWay")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/junior/sumToAim.html"}},[t._v("数组累加得到aim")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/junior/cow.html"}},[t._v("cow")])],1)]),t._v(" "),r("h3",{attrs:{id:"其他"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[t._v("#")]),t._v(" 其他")]),t._v(" "),r("ol",[r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/junior/searchInOrderMatrix.html"}},[t._v("searchInOrderMatrix")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/junior/zigzagMatrix.html"}},[t._v("zigzagMatrix")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/junior/rotateMatrix.html"}},[t._v("旋转正方形矩阵")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/junior/spiralOrder.html"}},[t._v("转圈打印矩阵")])],1)]),t._v(" "),r("h2",{attrs:{id:"左程云-中级"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#左程云-中级"}},[t._v("#")]),t._v(" 左程云：中级")]),t._v(" "),r("h3",{attrs:{id:"kmp"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#kmp"}},[t._v("#")]),t._v(" KMP")]),t._v(" "),r("ol",[r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/senior/kmp.html"}},[t._v("KMP算法详情与应用")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/senior/madeOfOneSubstr.html"}},[t._v("s是否仅能由一个子串组成")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/senior/suppleString.html"}},[t._v("合并后的字符串包含两个s")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/senior/isSubtree.html"}},[t._v("T2是不是T1的子树")])],1)]),t._v(" "),r("h3",{attrs:{id:"滑动窗口"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#滑动窗口"}},[t._v("#")]),t._v(" 滑动窗口")]),t._v(" "),r("ol",[r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/senior/maxWindow.html"}},[t._v("生成窗口最大值数组")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/senior/subarrayCount.html"}},[t._v("最大值减去最小值小于或等于num的子数组数量")])],1)]),t._v(" "),r("h3",{attrs:{id:"单调栈"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#单调栈"}},[t._v("#")]),t._v(" 单调栈")]),t._v(" "),r("ol",[r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/senior/nearestBig.html"}},[t._v("比其大的的左右最近的元素")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/senior/maxTree.html"}},[t._v("单调栈实现一个数组的MaxTree")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/senior/maxRectangle.html"}},[t._v("最大子矩阵的大小")])],1)]),t._v(" "),r("h3",{attrs:{id:"二叉树"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二叉树"}},[t._v("#")]),t._v(" 二叉树")]),t._v(" "),r("ol",[r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/senior/morris.html"}},[t._v("morris遍历")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/senior/buildingOutline.html"}},[t._v("building outline")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/senior/maxBST.html"}},[t._v("最大搜索二叉子树")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/senior/maxHappy.html"}},[t._v("maxHappy")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/senior/isBalancedTree.html"}},[t._v("isBalancedTree")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/senior/isSearchTree.html"}},[t._v("isSearchTree")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/senior/isCompleteTree.html"}},[t._v("isCompleteTree")])],1)]),t._v(" "),r("h3",{attrs:{id:"动态规划-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#动态规划-2"}},[t._v("#")]),t._v(" 动态规划")]),t._v(" "),r("ol",[r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/senior/mostEor.html"}},[t._v("MostEor")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/senior/coinWays.html"}},[t._v("换钱的方法数")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/senior/coinCountMin.html"}},[t._v("换钱的最少钱张")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/senior/regularExpression.html"}},[t._v("regularExpression")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/senior/smallPath.html"}},[t._v("矩阵的最小路径和")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/senior/longestIncreaseSubsequence.html"}},[t._v("最长递增子序列")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/senior/longestCommonSubsequence.html"}},[t._v("最长公共子序列问题")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/senior/longestCommonSubstr.html"}},[t._v("最长公共子串问题")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/senior/leastEditCost.html"}},[t._v("最小编辑代价")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/senior/smallestCut.html"}},[t._v("回文最小分割数")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/senior/intersectCompose.html"}},[t._v("字符串的交错组成")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/senior/validMaxLen.html"}},[t._v("括号问题")])],1)]),t._v(" "),r("h3",{attrs:{id:"回溯-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#回溯-2"}},[t._v("#")]),t._v(" 回溯")]),t._v(" "),r("ol",[r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/senior/expressionCompute.html"}},[t._v("ExpressionCompute")])],1)]),t._v(" "),r("h3",{attrs:{id:"贪心-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#贪心-2"}},[t._v("#")]),t._v(" 贪心")]),t._v(" "),r("ol",[r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/senior/topKOfArraySum.html"}},[t._v("两个有序数组间相加和的TOP K问题")])],1)]),t._v(" "),r("h3",{attrs:{id:"其他-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#其他-2"}},[t._v("#")]),t._v(" 其他")]),t._v(" "),r("ol",[r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/senior/longestSubarrayOfEqualParity.html"}},[t._v("奇数、偶数个数相等的最长子数组")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/senior/longestSubarraySum.html"}},[t._v("累加和为aim的最长子数组")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/senior/longestSubarrayLessSum.html"}},[t._v("累加和小于aim的最长子数组")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/senior/manacher.html"}},[t._v("最长回文子串")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/senior/shortestEndByManacher.html"}},[t._v("使字符串变为回文串所需最小字符串")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/zuochengyun/senior/josephLoopNode.html"}},[t._v("环形单链表的约瑟夫问题")])],1)])])}),[],!1,null,null,null);r.default=i.exports}}]);